definitions:
  app.ErrResponse:
    properties:
      msg:
        example: an error has occured
        type: string
    type: object
  app.VErr:
    properties:
      field:
        example: input_field
        type: string
      message:
        example: input_field must have a value!
        type: string
    type: object
  app.ValidationError:
    properties:
      errors:
        items:
          $ref: '#/definitions/app.VErr'
        type: array
      message:
        example: invalid request parameters
        type: string
    type: object
  auth.LoginGoogleReq:
    properties:
      redirect_url:
        example: http://localhost:8000/auth/google
        type: string
    type: object
  auth.LoginGoogleRes:
    properties:
      oauth_url:
        example: https://accounts.google.com/o/oauth2/auth?...
        type: string
      state:
        example: GoogleAuthCredential_12345
        type: string
    type: object
  auth.SignupReq:
    properties:
      email:
        example: abc@def.gh
        type: string
      password:
        example: pass1234
        type: string
      username:
        example: rick
        type: string
    type: object
  auth.TokenRes:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
host: localhost:8000
info:
  contact: {}
  description: This is the core server for GoChat to manage accounts and contacts.
  termsOfService: http://swagger.io/terms/
  title: GoChat API documentation
  version: 1.0.0
paths:
  /api/auth/login/google:
    post:
      parameters:
      - description: login google request
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/auth.LoginGoogleReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.LoginGoogleRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.ValidationError'
      summary: Create google oauth redirect
      tags:
      - auth
  /api/auth/signup:
    post:
      parameters:
      - description: create new user
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/auth.SignupReq'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.TokenRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.ValidationError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.ErrResponse'
      summary: Create new user account
      tags:
      - auth
  /api/auth/temp:
    get:
      description: check for server connection
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Temporary Handler
      tags:
      - auth
  /api/user/temp:
    get:
      description: test REST on User
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Temporary Handler
      tags:
      - user
swagger: "2.0"
